/*
 * MIT License
 * Copyright (c) 2017-2019 nuls.io
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package io.nuls.block;

import io.nuls.base.basic.NulsByteBuffer;
import io.nuls.base.data.Block;
import io.nuls.base.data.NulsHash;
import io.nuls.base.data.Transaction;
import io.nuls.block.model.GenesisBlock;
import io.nuls.block.test.BlockGenerator;
import io.nuls.core.basic.VarInt;
import io.nuls.core.crypto.HexUtil;
import io.nuls.core.exception.NulsException;
import org.junit.Assert;
import org.junit.Test;

import java.nio.charset.StandardCharsets;
import java.util.ArrayList;
import java.util.List;

public class BlockGeneratorTest {

    /**
     * Test the continuity of blocks generated by the block generator
     * @throws Exception
     */
    @Test
    public void generate() throws Exception {
        int start = 1;
        int count = 10;
        List<Block> blocks = new ArrayList<>();

        GenesisBlock genesisBlock = GenesisBlock.getInstance(0, 0);
        blocks.add(genesisBlock);

        Block preBlock = genesisBlock;
        do{
            Block block = BlockGenerator.generate(preBlock);
            blocks.add(block);
            preBlock = block;
            start++;
        } while (start < count);

        for (int i = 0; i < blocks.size()-1; i++) {
            NulsHash prehash = blocks.get(i).getHeader().getHash();
            NulsHash hash = blocks.get(i+1).getHeader().getPreHash();
            Assert.assertEquals(prehash, hash);
        }
    }

    /**
     * Test the fork of the block generated by the block generator
     * @throws Exception
     */
    @Test
    public void fork() throws Exception {
        Block root = BlockGenerator.generate(null);
        Block block1 = BlockGenerator.generate(root, 1, "1");
        Block block2 = BlockGenerator.generate(root, 2, "1");
        Assert.assertEquals(root.getHeader().getHash(), block1.getHeader().getPreHash());
        Assert.assertEquals(block1.getHeader().getPreHash(), block2.getHeader().getPreHash());
        Assert.assertNotEquals(block1.getHeader().getHash(), block2.getHeader().getHash());
    }

    @Test
    public void blockParse() throws Exception {
        String hex = "9114cef419cfb13eba31d9e528ec5cf13ea8cd6909d024c48f6d01fc46797bd78c2c2389743bddcd39f58357559f650c58ddac69af4356903abc21501ee0a7569154c8664d010000050000005ca83b470a01008754c866010014001400500a002056dd55d0fe2a83fd4082476c5adf590ee40feab3fcbe991e93f4559e3d1e0dd403d5b0aaa312ed12a11af4f1c3c747708e04894a4f486bea9b57324e85c0d1c30dfe06bc30d054bd21037fae74d15153c3b55857ca0abd5c34c865dfa1c0d0232997c545bae5541a0863463044022049b0a769b7e942a206953a142e5deea23c79c8565e164a7f8be681ee730752be022079b6d7c72ffc9eb5eab3a23e3152bdd20fbb2aea672acaaf62109ac75ffc4dc401009154c8660000460001170200015f64837d090e0536482fbcab79b4f99f84c1f97e02000100a08601000000000000000000000000000000000000000000000000000000000000000000000000000002008154c8660c66656554797065207465737400d20217020001f7ec6473df12e751d64cf20a8baa7edd50810f8102000100e0aebb00000000000000000000000000000000000000000000000000000000000830ec9dcfaeeda6690017020001f7ec6473df12e751d64cf20a8baa7edd50810f81020002001027000000000000000000000000000000000000000000000000000000000000081c03f6ec7c9bb8d50001170200017fe9a685e43b3124e00fd9c8e4e59158baea634502000100e0aebb000000000000000000000000000000000000000000000000000000000000000000000000006a2103958b790c331954ed367d37bac901de5c2f06ac8368b37d7bd6cd5ae143c1d7e3473045022100a594048d557cb2ba18e12bfab93b57459088bd822b84dfe5032b534d4f8a31f7022036daa5b180f99a024316915885984be651210c3c1373e1868cbebdbb11da739f02008154c8660c66656554797065207465737400d00117020001f7ec6473df12e751d64cf20a8baa7edd50810f810200010000cc55010000000000000000000000000000000000000000000000000000000008368f55fd73f078cc0002170200017fe9a685e43b3124e00fd9c8e4e59158baea634502000100e0aebb00000000000000000000000000000000000000000000000000000000000000000000000000170200011098eb2f1393790d4dedcc65312bb0cfb08c9aff02000100809698000000000000000000000000000000000000000000000000000000000000000000000000006a2103958b790c331954ed367d37bac901de5c2f06ac8368b37d7bd6cd5ae143c1d7e3473045022100c45ef7289a3f9adfe4f5837514c9665ffa6df8a9ebf05c3eec34a03fd5bf7f95022058dc37652f0eb5448968263aaf8e334bf3e359712e5fb2964c2f992c4eaf3c3802008154c8660c66656554797065207465737400fd16010217020001f7ec6473df12e751d64cf20a8baa7edd50810f8102000100e0aebb000000000000000000000000000000000000000000000000000000000008bd9cef89aea974cf0017020001f7ec6473df12e751d64cf20a8baa7edd50810f81020003000020d2fb3b7600000000000000000000000000000000000000000000000000000830ec9dcfaeeda6690002170200017fe9a685e43b3124e00fd9c8e4e59158baea634502000100e0aebb00000000000000000000000000000000000000000000000000000000000000000000000000170200011098eb2f1393790d4dedcc65312bb0cfb08c9aff0200030000e057eb481b000000000000000000000000000000000000000000000000000000000000000000006a2103958b790c331954ed367d37bac901de5c2f06ac8368b37d7bd6cd5ae143c1d7e3473045022100ffeb4c09f701dbf563169e9fe8c49a1b8fea92e1f10f622f597480b72629ac8b022064dac7bd5bc3bb60ef41ca897ec87cf96924595998e2b8b1b8feeef45f169cfd02008154c8660c66656554797065207465737400fd16010217020001f7ec6473df12e751d64cf20a8baa7edd50810f8102000100e0aebb000000000000000000000000000000000000000000000000000000000008aab079a48d50854f0017020001f7ec6473df12e751d64cf20a8baa7edd50810f8102000200742700000000000000000000000000000000000000000000000000000000000008368f55fd73f078cc0002170200017fe9a685e43b3124e00fd9c8e4e59158baea634502000100e0aebb00000000000000000000000000000000000000000000000000000000000000000000000000170200011098eb2f1393790d4dedcc65312bb0cfb08c9aff0200020064000000000000000000000000000000000000000000000000000000000000000000000000000000692103958b790c331954ed367d37bac901de5c2f06ac8368b37d7bd6cd5ae143c1d7e3463044022037912bdc7a50e9c13417c13528372eaf2e8ccc13957955f00b168df56865fc31022012b9441cbe9a1a7b7bbde7ed3fef033a97dc7f85bb98a2b3f2000cb35a1eaf37";
        Block block100 = new Block();
        block100.parse(new NulsByteBuffer(HexUtil.decode(hex)));
        List<Transaction> txs = block100.getTxs();
        for (Transaction tx : txs) {
            if (tx.getTransactionSignature() == null) continue;
            System.out.println(String.format("type: %s, tx whole: %s", tx.getType(), HexUtil.encode(tx.serialize())));
            System.out.println(String.format("tx: %s", HexUtil.encode(tx.serializeForHash())));
            System.out.println(String.format("sign: %s", HexUtil.encode(tx.getTransactionSignature())));
        }
    }

    @Test
    public void varint() {
        String hex = "0000000000000000000000000000000000000000";
        System.out.println(HexUtil.encode(new VarInt(HexUtil.decode(hex).length).encode()));
    }

    @Test
    public void txParse() throws Exception {
        String txHex = "02001b1e1c6409636f696e2074657374008c01170100011b7ddde08e2994b7f61adfcf3d2106f97bff409a01000100e0c8100000000000000000000000000000000000000000000000000000000000080000000000000000000117010001ddad24283470fd27554f257fe8daa7099e05d7990100010040420f00000000000000000000000000000000000000000000000000000000000000000000000000692102ef5b152e3f15eb0c50c9916161c2309e54bd87b9adce722d69716bcdef85f54746304402204ad75b49a85540c522dae1ec89ad66ed451034b74d3ffc7ecd2837e2091942a402204f4a8f51dda0b537400e28ec82cb8915884c8acbe010f923dcc4eb8185a32b6d";
        Transaction tx = new Transaction();
        tx.parse(HexUtil.decode(txHex), 0);
        tx.getHash();
        System.out.println(String.format("tx: %s", HexUtil.encode(tx.serializeForHash())));
        System.out.println(String.format("sign: %s", HexUtil.encode(tx.getTransactionSignature())));
    }

    @Test
    public void txTest() throws Exception {
        String hex = "02008093006400008c0117010001b2a0187dfeb154a0852c822190317a96fdba4d7001000100e0ac003b00000000000000000000000000000000000000000000000000000000080000000000000000000117010001aca553215d606c663cac99e8503abe19f76289eb010001004026ff3a000000000000000000000000000000000000000000000000000000000000000000000000";
        Transaction tx = new Transaction();
        tx.parse(HexUtil.decode(hex), 0);
        tx.setRemark(("A professor from Southern Airlines brainwashed students in the classroom, and students expressed dissatisfaction on the blackboard. The school responded to the broadcast article\n" +
                "\n" +
                "Essay on Education\n" +
                "\n" +
                "2023-03-08 16:42\n" +
                "Anhui\n" +
                "Creator of Star Q&A Program,Primary and secondary school teachers,Creator in the field of high-quality education,Content Reviewer,Vitality Creator\n" +
                "follow\n" +
                "writing/Essay on Education（Sharing campus experiences、Comment on educational phenomena）\n" +
                "\n" +
                "On today's internet, people are concerned about“Public knowledge”Hate to the bone, the reason is simple. Public intellectuals use their authority and advantageous position to spread inappropriate remarks everywhere, spreading incorrect worldviews to those who come into contact with them、The worldview and values lead to the complete destruction of the three values.\n" +
                "\n" +
                "They thought they drank a little bit“education received in the West”Spreading Western values everywhere without a clear judgment of the right and wrong of the situation itself, especially in university classrooms. If it is known that teachers are constantly spreading false rumors in the classroom, how do students feel？\n" +
                "\n" +
                "\n" +
                "01\n" +
                "A professor from Southern Airlines brainwashed students in the classroom by flattering others\n" +
                "A professor surnamed Chen from Nanjing University of Aeronautics and Astronautics was suddenly reported by students, who pointed out that he made inappropriate remarks in class, instilling incorrect cognition and values in students, causing a huge uproar on the internet. People can't help but ask：\n" +
                "\n" +
                "Some professors insist on smashing the pot while eating the rice in the pot？What is the virtue of a teacher？What is professional ethics？\n" +
                "\n" +
                "\n" +
                "There are well-known universitiesVAccording to reports, Professor Chen from the School of Economics and Management of China Southern Airlines brainwashed students in the finance and taxation class, stating that China relies entirely on European and American countries to provide food. If foreign countries impose sanctions and economic blockades, more than half of the Chinese population will have no food to eat.\n" +
                "\n" +
                "02\n" +
                "Students express dissatisfaction on the blackboard\n" +
                "The students felt seriously uncomfortable upon hearing these contents. Some students recorded a video of Professor Chen's class and expressed their dissatisfaction in writing on the blackboard“Opening your mouth feels like a lackey”It can be seen how angry the students were at that time, and some students chose to report it.\n" +
                "\n" +
                "\n" +
                "In addition, according to Liu Jixing, a scholar of literature and history, Professor Chen also publicly emphasized the advantages of the United States in class. The reason was so absurd that students roast about it：This is an old rumor that has been spread countless times on the internet, and has been criticized countless times. However, this university professor is resolute in his words and openly insults the intelligence of students.\n" +
                "\n" +
                "These well-known professors are usually ignorant and inexperienced, relying on“Laoben”In the classroom, I always speak recklessly and refuse to look at the world with a developmental perspective. I would rather take the risk of making mistakes than study and think seriously, attempting to forcefully instill incorrect opinions and cognition into students.\n" +
                "\n" +
                "\n" +
                "03\n" +
                "School response：Investigation, zero tolerance\n" +
                "After this incident sparked public opinion on the internet, China Southern Airlines publicly responded：\n" +
                "\n" +
                "Confirmed that there were posts on the internet about a teacher making inappropriate comments in the classroom, which the school attaches great importance to. The investigation procedure has been initiated as soon as possible, insisting on zero tolerance for teacher ethics issues. During the investigation period, the teaching work of the teacher has been suspended.\n" +
                "\n" +
                "\n" +
                "Many alumni and netizens of China Southern Airlines have expressed that how could there be such an unbearable public professor in such a prestigious Southern Airlines？We must investigate thoroughly and hold them accountable.\n" +
                "\n" +
                "\n" +
                "Objectively speaking, although the investigation results of Southern Airlines have not been released, incidents of such students reporting teachers are generally firmly established. Without conclusive evidence, students will not write that sentence on the blackboard, let alone record videos and report it. The professor's inappropriate remarks are likely to exist.\n" +
                "\n" +
                "The only regret is that China Southern Airlines has always had a good reputation and social influence that has been dragged down by a well-known professor, and its impact on students should not be underestimated. It should be noted that the concept and speech of public knowledge are not something that happens overnight, but rather a continuous process of output and influence.\n" +
                "\n" +
                "04\n" +
                "epilogue\n" +
                "Although students have chosen to publicly express their dissatisfaction and report, what about students who have attended classes before？This is a thought-provoking question, why has the school never discovered such problems？All of these require investigation.\n" +
                "\n" +
                "\n" +
                "Fortunately, students bravely stood up against it, which is the success of our education. Students were not influenced by public opinions.\n" +
                "\n" +
                "Just like an associate professor from a university in Hefei who gave a high school speech before, openly flattered foreigners and believed that foreigners have better genes, which led to a high school student snatching the topic and shouting loudly：We strive to study for the great rejuvenation of the Chinese nation, not to integrate with foreigners！\n" +
                "\n" +
                "Ordinary students have a strong sense of righteousness, why can't professors do it？").getBytes(StandardCharsets.UTF_8));
        byte[] bytes = tx.serializeForHash();
        System.out.println(bytes.length);
        System.out.println(HexUtil.encode(bytes));
    }
    // Transfer transaction signature
    //   CLA: e0
    //   INS: 06
    //    P1: 00
    //    P2: 00
    //    Lc: 95
    // CData: 02008093006400008c0117010001b2a0187dfeb154a0852c822190317a96fdba4d7001000100e0ac003b00000000000000000000000000000000000000000000000000000000080000000000000000000117010001aca553215d606c663cac99e8503abe19f76289eb010001004026ff3a000000000000000000000000000000000000000000000000000000000000000000000000

    // Complete message: e00600009502008093006400008c0117010001b2a0187dfeb154a0852c822190317a96fdba4d7001000100e0ac003b00000000000000000000000000000000000000000000000000000000080000000000000000000117010001aca553215d606c663cac99e8503abe19f76289eb010001004026ff3a000000000000000000000000000000000000000000000000000000000000000000000000

}
